.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Bio::Mitomaster::RNASeq 3"
.TH Bio::Mitomaster::RNASeq 3 "2012-03-05" "perl v5.12.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Bio::Mitomaster::RNASeq \- An mtDNA transcript.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Generally, these objects are instantiated by calling the transcribe method on a Bio::Mitomaster::Seq object.  If for some reason you want to create an RNASeq object directly, you must specify a SpeciesRef object, locus \s-1ID\s0, and a hash reference of variants.  If the sequence is partial, then you must also specify the start and end values.  When created using the transcribe method, an RNASeq object will inherit the SpeciesRef object from the Seq object that creates it.
.PP
.Vb 2
\&    use Bio::Mitomaster::SpeciesRef;
\&    use Bio::Mitomaster::RNASeq;
\&
\&    my $ref = Bio::Mitomaster::SpeciesRef\->new(species=>\*(Aqhuman\*(Aq, reference=>\*(AqrCRS\*(Aq);
\&    my $rna_seq1 = Bio::Mitomaster::RNASeq\->new(species_ref=>$ref, locus_id=>5, variants=>{1=>\*(AqT\*(Aq,2=>\*(AqT\*(Aq});
\&    my $rna_seq2 = Bio::Mitomaster::RNASeq\->new(species_ref=>$ref, locus_id=>5, variants=>{1=>\*(AqT\*(Aq,2=>\*(AqT\*(Aq}, start=>1, end=>15); #same thing except that we only have the first 15 nucleotides
\&
\&    my $s = $rna_seq1\->seq(1,5);  #$s is \*(AqTTTCA\*(Aq, the first 5 RNA nucleotides of the transcript from locus 5;
.Ve
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
See Bio::Mitomaster::MitoSeq for inherited attributes.
.SS "end"
.IX Subsection "end"
The end position of the sequence.  Defaults to the length of the reference sequence transcript.  Set this in order to analyze partial sequences.  It will also cause the ref_seq value to end at this position.
.SS "locus_id"
.IX Subsection "locus_id"
The locus_id for this \s-1RNA\s0 sequence.  Use a Mitomaster object to see a list of the valid locus_id values that can be used (see the Bio::Mitomaster documentation).
.SS "start"
.IX Subsection "start"
The start position of the sequence.  Defaults to 1.  Set this in order to analyze partial sequences.  It will also alter the behavior of the ref_seq method.
.SH "METHODS"
.IX Header "METHODS"
See Bio::Mitomaster::MitoSeq for inherited methods, particularly the seq method, which is probably the most important one provided.
.SS "translate"
.IX Subsection "translate"
Returns a Bio::Mitomaster::AASeq object representing the translation that would be produced by translating the transcript sequence of this object.  This method cannot be called on partial transcript sequences.  Normally, you would begin with a Bio::Mitomaster object and use its seq method to produce a Seq object.  Then use the transcribe method of the Seq object to produce and RNASeq object, and finally use the translation method of the RNASeq object to produce an AASeq object.
.SH "AUTHOR"
.IX Header "AUTHOR"
Marty Brandon, \f(CW\*(C`<mbrandon at uci.edu>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to \f(CW\*(C`bug\-bio\-mitomaster\-seq at rt.cpan.org\*(C'\fR, or through
the web interface at http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Bio\-Mitomaster\-RNASeq <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Bio-Mitomaster-RNASeq>.  I will be notified, and then you'll
automatically be notified of progress on your bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Bio::Mitomaster::RNASeq
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT:\s0 \s-1CPAN\s0's request tracker
.Sp
http://rt.cpan.org/NoAuth/Bugs.html?Dist=Bio\-Mitomaster\-RNASeq <http://rt.cpan.org/NoAuth/Bugs.html?Dist=Bio-Mitomaster-RNASeq>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
http://annocpan.org/dist/Bio\-Mitomaster\-RNASeq <http://annocpan.org/dist/Bio-Mitomaster-RNASeq>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
http://cpanratings.perl.org/d/Bio\-Mitomaster\-RNASeq <http://cpanratings.perl.org/d/Bio-Mitomaster-RNASeq>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
http://search.cpan.org/dist/Bio\-Mitomaster\-RNASeq/ <http://search.cpan.org/dist/Bio-Mitomaster-RNASeq/>
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright 2009 Marty Brandon, all rights reserved.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
